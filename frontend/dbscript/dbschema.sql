
--==============================================================
-- TABLE: TBL_FRONTEND_PAY_ORDER  前端支付订单表
-- 分区字段  CREATE_TIME
--==============================================================
CREATE TABLE
    FRONTEND.TBL_FRONTEND_PAY_ORDER
    (
        ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
        PLATFORM_TYPE VARCHAR(32),
        ORDER_TYPE VARCHAR(32),
        REQUEST_SYSTEM VARCHAR(32) NOT NULL,
        CUSTOMER_NUMBER VARCHAR(20),
        OUT_TRADE_NO VARCHAR(100),
        REQUEST_ID VARCHAR(64) NOT NULL,
        ORDER_NO VARCHAR(100) NOT NULL,
        BANK_TRADE_ID VARCHAR(100),
        TRANSACTION_ID VARCHAR(100),
        PAY_STATUS VARCHAR(32) NOT NULL,
        NOTIFY_STATUS VARCHAR(32),
        OPEN_ID VARCHAR(70),
        PAY_BANK VARCHAR(64),
        PAY_BANKCARD_TYPE VARCHAR(64),
        PAY_INTERFACE VARCHAR(50),
        TOTAL_AMOUNT DECIMAL(15,4),
        BANK_TOTAL_COST DECIMAL(15,4),
        GOODS_DESCRIPTION VARCHAR(256),
        DEVICE_INFO VARCHAR(256),
        PAGE_CALL_BACK VARCHAR(256),
        PAYER_IP VARCHAR(20),
        CREATE_TIME TIMESTAMP NOT NULL,
        MODIFY_TIME TIMESTAMP,
        EXPIRE_TIME TIMESTAMP,
        BANK_SUCCESS_TIME TIMESTAMP,
        PAY_SUCCESS_TIME TIMESTAMP,
        REFUND_DATE TIMESTAMP,
        REFUND_STATUS VARCHAR(32),
        REFUND_TYPE VARCHAR(32),
        PAY_LIMIT_TYPE VARCHAR(32),
        ORDER_SYSTEM VARCHAR(32),
        DEAL_UNIQUE_SERIALNO VARCHAR(50),
        PAYMENT_PRODUCT VARCHAR(15),
        CONSTRAINT TBL_FRONTEND_PAY_ORDER_PK PRIMARY KEY (ID),
        CONSTRAINT TBL_FRONTEND_PAY_ORDER_REQUEST_UK UNIQUE (REQUEST_SYSTEM,REQUEST_ID),
        CONSTRAINT TBL_FRONTEND_PAY_ORDER_ORDER_NO_UK UNIQUE (ORDER_NO)
    );


--==============================================================
-- TABLE: TBL_FRONTEND_PAY_RECORD  前端支付记录表
-- 分区字段  CREATE_TIME
--==============================================================

CREATE TABLE
    FRONTEND.TBL_FRONTEND_PAY_RECORD
    (
        ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
        RECORD_NO VARCHAR(100) NOT NULL,
        ORDER_NO VARCHAR(100) NOT NULL,
        REQUEST_ID VARCHAR(64) NOT NULL,
        REQUEST_SYSTEM VARCHAR(32) NOT NULL,
        CUSTOMER_NUMBER VARCHAR(20),
        OUT_TRADE_NO VARCHAR(100),
        PLATFORM_TYPE VARCHAR(32),
        TOTAL_AMOUNT DECIMAL(15,4),
        RESPONSE_CODE VARCHAR(32),
        RESPONSE_MSG VARCHAR(128),
        NOCARD_CODE VARCHAR(32),
        NOCARD_MSG VARCHAR(128),
        CREATE_TIME TIMESTAMP NOT NULL,
        FRONT_VALUE VARCHAR(512),
        CONSTRAINT TBL_FRONTEND_PAY_RECORD_PK PRIMARY KEY (ID),
        CONSTRAINT TBL_FRONTEND_PAY_RECORD_ORDER_NO_UK UNIQUE (RECORD_NO)
    );
--创建索引
CREATE UNIQUE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_REQUEST_SYSTEM_REQUEST_ID_IDX ON FRONTEND.TBL_FRONTEND_PAY_ORDER(REQUEST_ID,REQUEST_SYSTEM);
CREATE UNIQUE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_ORDER_NO ON FRONTEND.TBL_FRONTEND_PAY_ORDER(ORDER_NO);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_REFUND_DATE ON FRONTEND.TBL_FRONTEND_PAY_ORDER(REFUND_DATE);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_CUSTOMER_NUMBER ON FRONTEND.TBL_FRONTEND_PAY_ORDER(CUSTOMER_NUMBER);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_CREATE_TIME ON FRONTEND.TBL_FRONTEND_PAY_ORDER(CREATE_TIME);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_MODIFY_TIME ON FRONTEND.TBL_FRONTEND_PAY_ORDER(MODIFY_TIME);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_OUT_TRADE_NO ON FRONTEND.TBL_FRONTEND_PAY_ORDER(OUT_TRADE_NO);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_BANK_TRADE_ID ON FRONTEND.TBL_FRONTEND_PAY_ORDER(BANK_TRADE_ID);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_ORDER_TRANSACTION_ID ON FRONTEND.TBL_FRONTEND_PAY_ORDER(TRANSACTION_ID);

CREATE UNIQUE INDEX FRONTEND.TBL_FRONTEND_PAY_RECORD_RECORD_NO ON FRONTEND.TBL_FRONTEND_PAY_RECORD(RECORD_NO);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_RECORD_ORDER_NO ON FRONTEND.TBL_FRONTEND_PAY_RECORD(ORDER_NO);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_RECORD_CREATE_TIME ON FRONTEND.TBL_FRONTEND_PAY_RECORD(CREATE_TIME);
---add 20161103
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_RECORD_REQUEST_ID ON FRONTEND.TBL_FRONTEND_PAY_RECORD(REQUEST_ID);
CREATE INDEX FRONTEND.TBL_FRONTEND_PAY_RECORD_REQUEST_SYSTEM ON FRONTEND.TBL_FRONTEND_PAY_RECORD(REQUEST_SYSTEM);

--注释
COMMENT ON FRONTEND.TBL_FRONTEND_PAY_ORDER(
    	ID IS '主键自动增长',
		PLATFORM_TYPE IS '平台类型',
		ORDER_TYPE IS '订单类型',
		REQUEST_SYSTEM IS '业务方',
		CUSTOMER_NUMBER IS '商户编号',
		OUT_TRADE_NO IS '商户订单号',
		REQUEST_ID IS '业务方订单号',
		ORDER_NO IS '银行子系统流水号',
		BANK_TRADE_ID IS '第三方渠道的订单号，例如：微信对接的中信银行，深圳金融结算中心',
		TRANSACTION_ID IS '实际支付渠道方订单号',
		PAY_STATUS IS '订单状态',
		NOTIFY_STATUS IS '通知状态',
		OPEN_ID IS '用户OPEN_ID',
		PAY_BANK IS '支付银行',
		PAY_BANKCARD_TYPE IS '支付银行卡类型',
		PAY_INTERFACE IS '3代银行子系统支付接口',
		TOTAL_AMOUNT IS '订单金额',
		BANK_TOTAL_COST IS '成本',
		GOODS_DESCRIPTION IS '商品描述',
		DEVICE_INFO IS '设备号',
		PAGE_CALL_BACK IS '页面回调地址',
		PAYER_IP IS '客户端IP',
		CREATE_TIME IS '下单时间',
		MODIFY_TIME IS '订单更新时间，可以理解为支付完成时间',
		EXPIRE_TIME IS '过期时间',
		BANK_SUCCESS_TIME IS '银行子系统支付成功时间或第三方渠道的支付成功时间',
		PAY_SUCCESS_TIME IS '渠道支付成功时间，例如微信的成功时间',
		REFUND_DATE IS '差错退款请求时间',
		REFUND_STATUS IS '差错退款状态',
		REFUND_TYPE IS '差错退款类型',
		PAY_LIMIT_TYPE IS '限制卡类型',
		ORDER_SYSTEM IS '订单方'
    );

    COMMENT ON FRONTEND.TBL_FRONTEND_PAY_RECORD(
    	ID IS '主键自动增长',
		RECORD_NO IS '支付流水号',
		ORDER_NO IS '银行子系统流水号',
		REQUEST_ID IS '业务方订单号',
		REQUEST_SYSTEM IS '业务方',
		CUSTOMER_NUMBER IS '商户编号',
		OUT_TRADE_NO IS '商户订单号',
		PLATFORM_TYPE IS '支付平台',
		TOTAL_AMOUNT IS '支付金额',
		RESPONSE_CODE IS '给上层返回码',
		RESPONSE_MSG IS '给上层返回信息',
		NOCARD_CODE IS '银行子系统返回码',
		NOCARD_MSG IS '银行子系统返回码',
		CREATE_TIME IS '本订单创建时间',
		FRONT_VALUE IS '具体的返回信息'
    );


GRANT SELECT,INSERT,UPDATE,DELETE ON FRONTEND.TBL_FRONTEND_PAY_ORDER TO USER FRONTAPP;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_ORDER  TO USER PNCASH;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_ORDER  TO USER OPENQ;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_ORDER  TO USER QUERY;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_ORDER  TO USER ZXQUERY;

GRANT SELECT,INSERT,UPDATE,DELETE ON FRONTEND.TBL_FRONTEND_PAY_RECORD TO USER FRONTAPP;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_RECORD  TO USER PNCASH;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_RECORD  TO USER OPENQ;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_RECORD  TO USER QUERY;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_PAY_RECORD  TO USER ZXQUERY;


--==============================================================
-- TABLE: TBL_FRONTEND_DAILY_DATA  前端支付日交易统计表
--==============================================================
-----日交易数据
CREATE TABLE
    frontend.TBL_FRONTEND_DAILY_DATA(
	    ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
		CUSTOMER_NUMBER VARCHAR(20) ,
		PLATFORM_TYPE VARCHAR(32) ,
		REQUEST_SYSTEM VARCHAR(32) ,
		ORDER_SYSTEM VARCHAR(32) ,
		ORDER_TYPE VARCHAR(32) ,
		PAY_STATUS VARCHAR(32) ,
		TRX_COUNT BIGINT,
		TRX_AMOUNT DECIMAL(18,4),
		BANK_COST DECIMAL(18,4),
		ORDER_DATE VARCHAR(15) ,
		CONSTRAINT TBL_FRONTEND_DATA_DAY PRIMARY KEY (ID)
    );
CREATE INDEX FRONTEND.TBL_FRONTEND_DAILY_DATA_ORDER_DATE ON FRONTEND.TBL_FRONTEND_DAILY_DATA(ORDER_DATE);

--==============================================================
-- TABLE: TBL_FRONTEND_DAILY_DATA  前端支付月交易统计表
--==============================================================
CREATE TABLE
    frontend.TBL_FRONTEND_MONTHLY_DATA(
	    ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
		CUSTOMER_NUMBER VARCHAR(20) ,
		PLATFORM_TYPE VARCHAR(32) ,
		REQUEST_SYSTEM VARCHAR(32) ,
		ORDER_SYSTEM VARCHAR(32) ,
		ORDER_TYPE VARCHAR(32) ,
		PAY_STATUS VARCHAR(32) ,
		TRX_COUNT BIGINT,
		TRX_AMOUNT DECIMAL(15,4),
		BANK_COST DECIMAL(15,4),
		ORDER_DATE VARCHAR(15) ,
		CONSTRAINT TBL_FRONTEND_DATA_DAY PRIMARY KEY (ID)
    );
CREATE INDEX FRONTEND.TBL_FRONTEND_MONTHLY_DATA_ORDER_DATE ON FRONTEND.TBL_FRONTEND_MONTHLY_DATA(ORDER_DATE);

GRANT SELECT,INSERT,UPDATE,DELETE ON FRONTEND.TBL_FRONTEND_MONTHLY_DATA TO USER FRONTAPP;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_MONTHLY_DATA  TO USER PNCASH;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_MONTHLY_DATA  TO USER OPENQ;

GRANT SELECT,INSERT,UPDATE,DELETE ON FRONTEND.TBL_FRONTEND_DAILY_DATA TO USER FRONTAPP;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_DAILY_DATA  TO USER PNCASH;
GRANT SELECT ON TABLE FRONTEND.TBL_FRONTEND_DAILY_DATA  TO USER OPENQ;